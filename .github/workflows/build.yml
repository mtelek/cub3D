name: Cub3D CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make xorg libxext-dev libbsd-dev valgrind

    - name: Prepare MiniLibX
      run: |
        if [ -d "minilibx-linux-master" ]; then
          cd minilibx-linux-master
          [ -f configure ] && chmod +x configure
          [ -f configure.inc ] && chmod +x configure.inc
          cd ..
        fi

    - name: Compile project
      run: |
        make re
        [ -f "cub3D" ] || (echo "Compilation failed" && exit 1)

    - name: Setup test maps
      run: |
        mkdir -p maps
        # Invalid maps
        echo "invalid content" > maps/invalid_content.cub
        echo -e "NO texture.xpm\nSO texture.xpm\nWE texture.xpm\nEA texture.xpm\nF 255,0,0\nC 0,0,255\n\n111\n1P \n111" > maps/invalid_map_format.cub
        echo -e "NO missing_texture.xpm\nSO texture.xpm\nWE texture.xpm\nEA texture.xpm\nF 300,0,0\nC 0,0,300\n\n111\n1P1\n111" > maps/invalid_texture_color.cub
        echo -e "NO texture.xpm\nSO texture.xpm\nWE texture.xpm\nEA texture.xpm\nF 255,0,0\nC 0,0,255\n\n111\n1P1\n1 1" > maps/invalid_map_chars.cub
        echo -e "NO texture.xpm\nSO texture.xpm\nWE texture.xpm\nEA texture.xpm\nF 255,0,0\nC 0,0,255\n\n111\n111\n111" > maps/missing_player.cub

    - name: Validate map handling
      run: |
        echo "=== Testing invalid map cases ==="
    
        declare -A test_cases=(
        ["invalid_content.cub"]="Invalid content"
        ["invalid_map_format.cub"]="Map formatting"
        ["invalid_texture_color.cub"]="Texture/color values"
        ["invalid_map_chars.cub"]="Invalid map characters"
        ["missing_player.cub"]="Missing player position"
        )

        for map in "${!test_cases[@]}"; do
          echo "Testing ${test_cases[$map]} (should fail)..."
          if ./cub3D "maps/$map" 2>&1 | grep -q "Error"; then
            echo "✓ Correctly rejected: ${test_cases[$map]}"
          else
            echo "✗ Failed to reject: ${test_cases[$map]}" && exit 1
          fi
        done

        echo "All invalid map tests passed successfully"
    - name: Memory check
      run: |
        mkdir -p logs
        timeout 10 valgrind --leak-check=full --show-leak-kinds=all \
          --error-exitcode=1 --track-origins=yes \
          --log-file=logs/valgrind.log \
          ./cub3D maps/valid.cub || true
        cat logs/valgrind.log

    - name: Upload diagnostics
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: diagnostics
        path: logs/
        retention-days: 1
